:Class Object

    :include ##.Utils

    :field private service
    :field private name←''
    :field private creationDate←''
    :field private client
    :field private bucket

    :field private   key
    :field private   lastModified
    :field private   eTag
    :field private   size
    :field private   storageClass
    :field private ownerID
    :field private ownerDisplayName
    :field private isRetreived←0
    :field private value  ←⍬
    :field private contentType←''
    :field private lastRetreived←⍬
    :field private version←''
    :field private acl←'private'

    :field public shared Readonly ACLList←'private'  'public-read'  'public-read-write'  'aws-exec-read' 'authenticated-read' 'bucket-owner-read'  'bucket-owner-full-control'

    :property  ACL
    :access public
      ⍝
⍝        ∇ r←get
⍝          r←acl
⍝        ∇
⍝
        ∇ set v
         
          :If ~(⊂v.NewValue)∊ACLList
              ⎕SIGNAL⊂('EN' 6)('EM' 'Invalid Access Control List value.')('Message' 'See Object.ACLList for options.')
          :EndIf
          acl←v.NewValue
        ∇

    :endproperty

    :property  Version
    :access public

        ∇ r←get
          r←version
        ∇


        ∇ set v
          version←''
          →('null'≡v.NewValue)/0
          version←v.NewValue
        ∇
    :endproperty


    :property  IsRetreived
    :access public

        ∇ r←get
          r←isRetreived
        ∇

    :endproperty

    :property  LastRetreived
    :access public

        ∇ r←get
          r←lastRetreived
        ∇

    :endproperty

    :property  Value
    :access public

        ∇ r←get
          r←value
        ∇

        ∇ set v
          value←⎕UCS'UTF-8'⎕UCS  v.NewValue
        ∇

    :endproperty

    :property  ContentType
    :access public

        ∇ r←get
          r←contentType
        ∇

        ∇ set v
          contentType←v.NewValue
        ∇

    :endproperty


    :property  ContentLength
    :access public

        ∇ r←get
          r←≢value
        ∇

    :endproperty

    :property  OwnerID
    :access public

        ∇ r←get
          r←ownerID
        ∇

        ∇ set v
          ownerID←v.NewValue
        ∇

    :endproperty


    :property  OwnerDisplayName
    :access public

        ∇ r←get
          r←ownerDisplayName
        ∇

        ∇ set v
          ownerDisplayName←v.NewValue
        ∇

    :endproperty

    :property   Key
    :access public

        ∇ r←get
          r←key
        ∇

        ∇ set v
          key←v.NewValue
          client.URI←'/',Key
        ∇

    :endproperty

    :property   LastModified
    :access public

        ∇ r←get
          r←lastModified
        ∇

        ∇ set v
          lastModified←v.NewValue
        ∇

    :endproperty

    :property   ETag
    :access public

        ∇ r←get
          r←eTag
        ∇

        ∇ set v
          eTag←v.NewValue
        ∇

    :endproperty

    :property   Size
    :access public

        ∇ r←get
          r←size
        ∇

        ∇ set v
          size←v.NewValue
        ∇

    :endproperty

    :property   StorageClass
    :access public

        ∇ r←get
          r←storageClass
        ∇

        ∇ set v
          storageClass←v.NewValue
        ∇

    :endproperty


    ∇ Z←New s
      :Access public shared
      Z←⎕NEW ⎕THIS s
    ∇

    ∇ const0 s
      :Access public
      :Implements constructor
      bucket←s
      client←bucket.Client.Clone
      client.Host←'s3.amazonaws.com'
      client.Domain←bucket.Name
    ∇

    ∇ {Z}←GetValue;res;c
      :Access public instance
      ⍝ Z   : 0 if no value
     
      :If 0=≢Key
          ⎕SIGNAL⊂('EN' 6)('EM' 'Key property is empty.')('Message' 'Key must be a valid object on S3.')
      :EndIf
     
      c←client.Clone
      c.HTTPMethod←'GET'
      res←c.SendRequest 1
     
      contentType←res.ContentType.ContentType
      processHeaders res.Headers
     
      isRetreived←1
      value←res.Content
      lastRetreived←⎕TS
      Z←0=≢value
    ∇

      processHeaders←{
          h←⊃⍵
          lastModified∘←1⊃h[h[;0]⍳⊂'last-modified';]
          eTag∘←1⊃h[h[;0]⍳⊂'etag';]
          Version∘←1⊃h[h[;0]⍳⊂'x-amz-version-id';]
     
      }


    ∇ {Z}←GetMetaData;res;c
      :Access public instance
      ⍝ Z   : 0 if no value
     
      :If 0=≢Key
          ⎕SIGNAL⊂('EN' 6)('EM' 'Key property is empty.')('Message' 'Key must be a valid object on S3.')
      :EndIf
     
      c←client.Clone
      c.HTTPMethod←'HEAD'
      res←c.SendRequest 1
     
      contentType←res.ContentType.ContentType
      processHeaders res.Headers
     
      isRetreived←0
      value←⍬
      lastRetreived←⍬
     
      Z←0
    ∇

    ∇ Z←Delete;res;c
      :Access public instance
      ⍝ Z   : 0 if deleted
     
      :If 0=≢Key
          ⎕SIGNAL⊂('EN' 6)('EM' 'Key property is empty.')('Message' 'Key must be a valid object on S3.')
      :EndIf
     
      c←client.Clone
      c.HTTPMethod←'DELETE'
      res←c.SendRequest 1
      Z←res.StatusCode≠204
     
    ∇

    ∇ Z←Put;res;c
      :Access public instance
      ⍝ Z   : 0 if deleted
     
      :If 0=≢Key
          ⎕SIGNAL⊂('EN' 6)('EM' 'Key property is empty.')('Message' 'Key must be a valid object on S3.')
      :EndIf
     
      c←client.Clone
      c.HTTPMethod←'PUT'
      c.Body←Value
      c.Headers←,⊂'Content-Type' 'text/plain'
      c.Headers,←⊂'x-amz-acl'acl
     
      res←c.SendRequest 1
      Z←200≠res.StatusCode
    ∇

:EndClass
