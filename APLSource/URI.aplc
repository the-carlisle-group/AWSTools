:class URI
    :include Utils

    :field public Path←'/'
    :field private scheme←'https'
    :field public QueryParams   ←⍬
    :field private fragment ←''
    :field public HostRoot←'amazonaws.com'
    :field private hostRegion←''
    :field private hostService←''
    :field public HostPrefix←''

    :field private port←443

    ∇ Z←New
      :Access public shared
      Z←⎕NEW ⎕THIS
    ∇

    :property HostRegion
    :access public instance
        ∇ r←get
          r←hostRegion
        ∇

        ∇ set v
          hostRegion←(819⌶)v.NewValue
        ∇
    :endproperty

    :property HostService
    :access public instance
        ∇ r←get
          r←hostService
        ∇

        ∇ set v
          hostService←(819⌶)v.NewValue
        ∇
    :endproperty

    :property Host
    :access public instance
        ∇ r←get
         
          r←''
          r,←(0≠≢HostPrefix)/HostPrefix,'.'
          r,←(0≠≢HostService)/HostService,'.'
          r,←(0≠≢HostRegion)/HostRegion,'.'
          r,←HostRoot
         
        ∇
    :endproperty

    :property Fragment
    :access public instance
        ∇ r←get
          r←fragment
        ∇

        ∇ set v
          fragment←v.NewValue
          →(0=≢fragment)/0
          fragment←(('#'≠↑fragment)/'#'),fragment
        ∇
    :endproperty

    :property Port
    :access public instance
        ∇ r←get
          r←port
        ∇

        ∇ set v
          port←v.NewValue
        ∇
    :endproperty


    :property Scheme
    :access public instance
        ∇ r←get
          r←scheme
        ∇

        ∇ set v
          scheme←(819⌶)v.NewValue
          :If ~(⊆scheme)∊'http' 'https'
              'Scheme must be http or https.'⎕SIGNAL 6
          :EndIf
        ∇
    :endproperty


    :property Query
    :access public instance
        ∇ r←get
          r←''
          :If 0≠≢QueryParams
              r,←'?',¯1↓∊({(UriEncode 0⊃⍵),'=',UriEncode 1⊃⍵}¨QueryParams),¨'&'
          :EndIf
         
        ∇
    :endproperty

    :property URI
    :access public
        ∇ r←get
          r←Scheme,'://'
          r,←Host
          :If scheme port≢'https' 443
          :AndIf scheme port≢'http' 80
              r,←(':',⍕Port)
          :EndIf
         
          r,←,Path,Query,Fragment
        ∇
    :endproperty

:endclass
